기본 방향
접속->/includes/Dbconnect.php에서 DB접속을 위해서 $pdo를 변수 정의 
-> "/includes/Automatic.php가져오면서 $auto 변수 생성하면서 Automatic()객체 정의 -> clearmember()를 이용해서 회원 해제일이면 해제 -> overdue_manager()를 이용해서 반납예정일 지나면 연체테이블에 새로운 자료 추가 및 회원상태를 정지 상태로 바꿈 -> delreturn()을 이용해서 상호대차를 찾아가지 않는 도서는 반송할 수 있게 del_app을 2로 변환"
->"/classes/ProcessManager.php -> $ps에 ProcessManager()객체 생성 -> run()함수 실행 -> /../classes/TableManager.php -> 모든 데이터베이스 있는 모든 테이블 생성 -> outPage()함수 실행 -> /templates/layout.html.php를 가져옵니다."
layout.html.php 진행 방향
팝업창인지부터 확인(20줄~22줄)->회원 상태 확인(27줄~32줄)->$title특수사항(34줄~46줄)->$menu특수사항(48줄~53줄)->매뉴 배열생성(56줄~121줄)->매뉴 배열을 이용해서 매뉴와 사이드 매뉴 생성

공지사항 테이블 방향(NotController.php)
게시판형은 list()함수를 이용해서 띄움, 등록과 수정은 addupdate()함수를 이용해서 띄움
공지사항 검색
research()사용해서 검색창에 있는 내용('user_research')를 가져와서 sql로 만들고 결과를 모두 화면에 띄움
공지사항 추가
addupdate()사용해서 $_POST에 등록된 내용을 가지고 insertData()를 이용해서 notification테이블 자료 추가->자료 추가된 not_no를 찾기->"img_manage()사용해서 이미지 파일이 존재하면 not_no이름의 디렉토리 존재하면 delete_img()를 사용해서 삭제->'img_uplodae()사용해서 이미지 형식 확인하고 확장자가 등록가능 확장자인지 확인한 후 not_no이름의 디렉토리 생성해서 이미지 저장하고 이미지 저장경로를 $_POST 리턴 받음'->$_POST에 알맞는 url에 저장경로를 삽입"->updateData()사용해서 변경
공지사항 수정
addupdate()사용해서 "img_manage()사용해서 이미지 파일이 존재하면 not_no이름의 디렉토리 존재하면 delete_img()를 사용해서 삭제->'img_uplodae()사용해서 이미지 형식 확인하고 확장자가 등록가능 확장자인지 확인한 후 not_no이름의 디렉토리 생성해서 이미지 저장하고 이미지 저장경로를 $_POST 리턴 받음'->$_POST에 알맞는 url에 저장경로를 삽입"->updateData()사용해서 변경
공지사항 삭제
delete()사용-> delete_img()사용해서 ./img/not/$_POST['not_no']에 경로에 있는 모든 디렉토리 삭제->deleteData()를 이용해서 데이터베이스 자료 삭제

책 테이블 방향(BookController.php)
게시판형은 list()함수를 이용해서 띄움, 등록과 수정은 addupdate()함수를 이용해서 띄움, 책 팝업창도 동일
책 검색
research()사용해서 $_POST['user_research']를 값을 받아와서 $where변수를 만들고 모든 결과를 모두 화면에 띄움
책 삽입
addupdate()사용해서 $_POST에 가져온 내용을 가지고 insertData를 이용해서 book테이블 자료 추가
책 수정
addupdate()사용해서 $_POST에 가져온 내용을 가지고 updateData를 이용해서 book테이블 자료 수정
책 삭제
delete()사용해서 $_POST['book_no']가지고 deleteData()를 이용해서 book테이블 자료 삭제

종류 테이블 방향(KindController.php)
게시판형은 list()함수를 이용해서 띄움, 등록과 수정은 addupdate()함수를 이용해서 띄움
종류 검색
research()사용해서 소분류선택박스, 중분류선택박스, 대분류선택박스를 통해서 $where를 이용해서 모든 결과를 화면에 띄운다.
종류 추가
addupdate()사용해서 $_POST['sup']이 0이면 $_POST['base']를 사용하고 아니면 $_POST['sup']을 이용-> makekey()에서 소수점이 존재하지 않으면 .1 또는 .다음번호를 kind_no와 $_POST['kind_name]'을 가지고 insertData를 이용해서 kind테이블 자료 추가
종류 수정
addupdate()사용해서 $_POST['sup']이 0이면 $_POST['base']를 사용하고 아니면 $_POST['sup']을 이용-> makekey()에서 소수점이 존재하지 않으면 .1 또는 .다음번호를 kind_no와 $_POST['kind_name]'을 가지고 updateData를 이용해서 kind테이블 자료 수정
종류 삭제
delete()사용해서 $_POST['kind_no']가지고 deleteData()를 이용해서 kind테이블 자료 삭제

도서관 테이블 방향(LibController.php)
게시판형은 list()함수를 이용해서 띄움, 등록과 수정은 addupdate()함수를 이용해서 띄움
도서관 검색
research()사용해서 $_POST['user_research']를 값을 받아와서 $where변수를 만들고 모든 결과를 모두 화면에 띄움
도서관 삽입
addupdate()사용해서 $_POST에 가져온 내용을 가지고 insertData를 이용해서 book테이블 자료 추가
도서관 수정
addupdate()사용해서 $_POST에 가져온 내용을 가지고 updateData를 이용해서 book테이블 자료 수정
도서관 삭제
delete()사용해서 $_POST['book_no']가지고 deleteData()를 이용해서 book테이블 자료 삭제

자료 테이블 방향(MatController.php)
게시판형은 session에 저장된 mem_state에 값과 list()함수를 이용해서 띄움, 등록과 수정은 addupdate()함수를 이용해서 띄움, 자료 팝업창은 poplist()함수를 이용해서 띄움
자료 검색
research()사용해서 먼저 색션확인(101~103)하고 $_GET['title']이 있는 확인하고 있으면 $title의 값 변경과 $ispop=true 없으면 $ispop=false(105~112)하고 $_POST['user_research']값을 이용해서 책을 찾고 선택박스 통해서 선택된 도서관 정보를 가지고 자료를 검색 결과를 화면에 띄움
자료 삽입 및 수정 공통 사항
addupdate()사용-> "BookSymbol 객체를 생성 작가이름을 공백단위로 잘라서 배열로 저장하고 공백이 있으면 영어이름,  공백이 없으면 한글이름으로 설정하고 영어이름이면 $lastauthor_exist=true로 설정 -> inital()사용해서 영어가 있는지 확인하고 영어가 존재하면 한글이 존재하는 확인(40~45줄)하고 한글이 존재하면 stringTochar()함수 사용 아니면 sequence_change()함수 사용하고 englishTokorean()함수 사용해서 영어를 한글로 바꿔주고 stringTochar(47~59줄), 배열크기가 2이상이면 sequence_change()함수 사용하고 stringTochar()함수 사용(60~65줄)이외에는 바로 stringTochar()사용(67~69줄)->stringTochar()에서 한글자씩 배열로 저장하고 첫번째글자를 그대로 사용하고 두번째글자는 초성,중성,종성으로 분리하고 $result_array배열로 내용저장(510~526줄)->finish_sysmbol를 이용해서 도서기호 만듦->call_symbol()함수이용해서 addupdata()값을 사용됨"->권차 등록->"book_count()를 이용->$_POST['lib_no'], $_POST['book_no']를 이용해서  이 정보와 같은 책의 개수 세고 개수 값으로 c.개수값으로 만듦"
자료 삽입
위에 공통상항을 진행한후에 insertData()를 이용해서 material테이블 자료 추가
자료 수정
위에 공통상항을 진행한후에 updateData()를 이용해서 material테이블 자료 수정
자료 삭제
delete()사용해서 $_POST['mat_no']가지고 deleteData()를 이용해서 material테이블 자료 삭제-> "$_POST['mat_overlap']가 'c.1'이 아니면 book_count()를 이용->$_POST['lib_no'], $_POST['book_no']를 이용해서  이 정보와 같은 책의 개수 세고 개수 값으로 c.개수값으로 만듦" ->도서관 번호와 책 번호의 정보 같은 모든 자료들을 바꾸어줍니다.
예약 추가
resadd()함수를 이용해서 $_POST['mat_no']를 이용해서 예약도서가 있는 지 확인하고 존재하면 경과 메시지 없으면 $_POST['mat_no']과 $_SESSION['mem_no']를 이용해서 reservation테이블 자료 추가

회원 테이블 방향(MemberController.php)
게시판형은 list()함수를 이용해서 띄움, 등록과 수정은 addupdate()함수를 이용해서 띄움, 자료 팝업창은 list()함수를 이용해서 띄움, home()함수를 이용해서 띄움, login()함수를 이용해서 띄움, 회원가입과 회원수정은 addupdate()함수 이용해서 띄움
회원 검색
research()함수를 이용해서 검색창에 입력내용을 $_POST['user_research']받아와서 이름, 아이디가 일치하는 내용을 찾아서 모든 결과 같을 출력합니다.
회원 등록
addupdate()사용해서 $_POST에 가져온 내용을 가지고 insertData를 이용해서 member테이블 자료 추가
회원 수정
addupdate()사용해서 $_POST에 가져온 내용을 가지고 updateData를 이용해서 member테이블 자료 수정
회원 삭제
회원자 계정이면 memdel()함수를 이용해서 자료 삭제, 관리자 계정이면 delete()함수를 이용해서 자료 삭제

대출 테이블 방향(LenController.php)
'대출현황'은 list(), '회원 대출중자료'는 memLent(), '회원 모든대출자료'는 memAllLent(), '반납추가'는 returnLent(), '대출 팝업창'는 listlen()으로 출력, '대출 수정'과 '대출 추가'는 addupdate()이용해서 화면 출력 
대출 등록
addupdate()사용->"reservationCheck()함수 이용해서 다른 회원이 예약한 도서인지 확인합니다. 만약 다른 회원이 예약한 도서면 알림메시지와 함께 대출 등록이 불가능"-> 오늘 날짜, 회원기본키, 대출기본키 이용해서 insertdata()이용해서 대출 테이블 자료 추가하고 방금 생성된 자료 대출 기본키를 찾고 상호대차 통해서 대출할 경우 상호대차 테이블에 대출 기본키를 updateData()를 이용해서 수정하고 선택박스에 선택한 $_POST['lib_no']를 이용해서 place 테이블에 insertData()해서 자료 추가
대출 수정
addupdate()사용해서 반납에서 미반납또는 기타로 변경되면 대출 장소와 연체 테이블에서 lib_no_re=null, due_exp=null 값을 delupdataSQL()함수를 이용해서 수정합니다. 반납 날짜가 존재하면 $param에 행렬을 추가하고 updateData()이용해서 수정합니다.
반납 등록
returnadd()이용해서 현재날짜, 도서관 기본키, 자료 기본키, 대출 기본키를 이용해서 updateData를 이용해서 대출 테이블 상태를 반납 상태로 변경하고 delupdataSQL()이용해서 반납 장소를 대출 장소 테이블 null에서 도서관 기본키로 수정합니다. 자료 기본키를 이용해서 소장 도서관을 찾고 도서관 기본키와 소장 도서관 키가 다르면 insertData()이용해서 del_app을 2로 해서 상호대차 테이블에 자료를 추가-> 대출 기본키를 이용해서 연체가 있는 확인 "resultempty_check()이용해서 결과 값이 없는 확인"-> 결과 값이 존재하면 updataData()를 이용해서 해제일을 추가해줍니다.
대출 삭제
delete()사용해서 delupdataSQL()이용해서 대출 장소 테이블 자료 삭제, deleteData()이용해서 lent 테이블 자료 삭제

상호대차 테이블 방향(DelController.php)
'상호대차 완료'는 completelist(), '상호대차 도착일'는 addlist(), 이외에는 mem_state 섹션 정보와 list()이용해서 화면 출력, '상호대차 추가' 및 '상호대차 수정'는 addupdate()이용해서 화면 출력 
상호대차 검색
research()를 이용해서 관리자 계정이면 선택박스에 선택에 따라서 회원, 자료, 회원+자료를 통해서 나온 모든 결과를 출력 또는 일반 계정이면 책 제목만 검색
상호대차 추가
$_POST['mat_no']를 통해서 도서관 외래키를 가져오 상호대차로 보낼 도서관과 도서관 외래키 같으면 경고 메시지를 보내고 다르면 추가를 진행 $_POST['mem_no'], $_POST['mat_no']를 이용해서 insertData() 사용해서 delivery 테이블에 자료 추가
상호대차 수정
$_POST['mat_no']를 통해서 도서관 외래키를 가져오 상호대차로 보낼 도서관과 도서관 외래키 같으면 경고 메시지를 보내고 다르면 수정을 진행 $_POST['lib_arr_date']내용이 없으면 $_POST['lib_arr_date']제외한 모든 내용 수정 있으면 모든 내용 수정
상호대차 삭제
delete()사용해서 $_POST['del_no']가지고 deleteData()를 이용해서 delivery 테이블 자료 삭제

예약 테이블 방향(ResController.php)
게시판형 및 예약팝업창은 list()를 이용, 예약관리와 예약추가화면은 addupdate()이용
예약 검색
research()를 이용해서 관리자계정이면 회원 정보로 예약 검색, 그 외에는 책이름으로 예약 검색 되고 모든 결과를 화면에 출력
예약 등록
addupdate()사용해서 $_POST에 가져온 내용을 가지고 insertData를 이용해서 reservation테이블 자료 추가
예약 수정
addupdate()사용해서 $_POST에 가져온 내용을 가지고 updateData를 이용해서 reservation테이블 자료 추가
예약 삭제
delete()를 사용해서 deleteData()이용해 reservation테이블 자료 삭제

대출장소 테이블 방향(EtcController.php)
대출장소 관리 화면 출력은 plalist()함수 이용
대출장소 검색
plaresearch()함수 이용해서 검색
대출장소 수정
addupdate()함수로 수정, updateData()이용해서 place테이블 자료 수정

연체관리 테이블 방향(EtcController.php)
연체 관리 화면 출력은 duelist()함수 이용
연체 검색
dueresearch()함수 이용해서 검색
연체 수정
addupdate()함수로 수정, updateData()이용해서 overdue테이블 자료 수정
연체 삭제
delete()함수로 삭제, deleteData()이용해서 overdue테이블 자료 삭제,  updateData()이용해서 회원 상태 수정

